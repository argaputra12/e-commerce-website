{"version":3,"file":"static/js/180.ff89caa2.chunk.js","mappings":"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","sources":["components/admin/CreateBanner.tsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\nimport { IoClose } from 'react-icons/io5';\n\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDropzone } from 'react-dropzone';\n\nimport { ApiError, BannerService } from '../../api';\nimport Button from '../button/Button';\nimport Dropdown from '../input/Dropdown';\nimport Input from '../input/Input';\nimport { convertToBase64 } from '../util/utilFunc';\n\nconst CreateBanner = () => {\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const [title, setTitle] = useState('');\n  const [urlPath, setUrlPath] = useState('');\n  const [textPosition, setTextPosition] = useState('left');\n  const [image, setImage] = useState<string>('');\n  const [file, setFile] = useState<File>(new File([], ''));\n\n  const createBanner = useMutation(\n    (variables: {\n      title: string;\n      url_path: string;\n      text_position: string;\n      image: string;\n    }) =>\n      BannerService.createBanner({\n        title: variables.title,\n        url_path: variables.url_path,\n        text_position: variables.text_position,\n        image: variables.image,\n      }),\n    {\n      onSuccess: (data) => {\n        toast.success(data.message);\n        queryClient.invalidateQueries('banners');\n        navigate('/admin/banners');\n      },\n    }\n  );\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const imageString = file.size\n      ? ((await convertToBase64(file)) as string)\n      : image === ''\n      ? 'delete'\n      : '';\n    createBanner.mutate({\n      title,\n      url_path: urlPath,\n      text_position: textPosition,\n      image: imageString,\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"w-full text-2xl font-medium\">Create Banner</h2>\n      <div className=\"flex py-3 \">\n        <Link to=\"/admin/banners\" className=\"flex place-items-center  gap-x-2\">\n          <HiOutlineChevronLeft className=\"text-xl\" />\n          Go Back\n        </Link>\n      </div>\n      <form\n        className=\"information flex w-full flex-col gap-y-4 py-4 text-lg text-gray-700 \"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"\">\n          <label htmlFor=\"name\" className=\"text-lg\">\n            Name\n          </label>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            extraClass=\"w-full mt-1 mb-2\"\n            border=\"border-2 border-gray-400\"\n            value={title}\n            onChange={(e) => setTitle((e.target as HTMLInputElement).value)}\n            required\n          />\n        </div>\n        <div className=\"\">\n          <label htmlFor=\"urlPath\" className=\"text-lg\">\n            Url Path\n          </label>\n          <Input\n            name=\"urlPath\"\n            type=\"text\"\n            extraClass=\"w-full mt-1 mb-2\"\n            border=\"border-2 border-gray-400\"\n            value={urlPath}\n            onChange={(e) => setUrlPath((e.target as HTMLInputElement).value)}\n            required\n          />\n        </div>\n        <div className=\"\">\n          <div className=\"mb-2 text-lg\">Text Position</div>\n          <Dropdown\n            selected={textPosition}\n            setSelected={setTextPosition}\n            width=\"w-64\"\n            border=\"border-2 border-gray-400\"\n            options={['left', 'right']}\n          />\n        </div>\n        <div className=\" border-2 border-gray-400 p-4\">\n          <Dropzone\n            initialImage={image}\n            setImage={setImage}\n            file={file}\n            setFile={setFile}\n          />\n        </div>\n        <div className=\"mt-8 flex place-content-between\">\n          <button\n            type=\"button\"\n            onClick={() => navigate('/admin/banners')}\n            className=\"mb-4 w-52 border border-gray-500 py-3 px-6 text-center text-xl hover:bg-gray-500  hover:text-gray-100 sm:py-2 sm:text-base\"\n            aria-label=\"Cancel Banner\"\n          >\n            Cancel\n          </button>\n          <Button\n            type=\"submit\"\n            value=\"Create Banner\"\n            extraClass=\"w-52 text-center text-xl mb-4\"\n            size=\"lg\"\n          />\n        </div>\n      </form>\n    </>\n  );\n};\n\ninterface props {\n  initialImage: string;\n  setImage: React.Dispatch<React.SetStateAction<string>>;\n  file: File;\n  setFile: React.Dispatch<React.SetStateAction<File>>;\n}\n\nconst Dropzone = ({ initialImage, setImage, file, setFile }: props) => {\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const mappedFiles = acceptedFiles.map((file) => {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        });\n      });\n      setFile(mappedFiles[0]);\n    },\n    [setFile]\n  );\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/jpeg': [],\n      'image/jpg': [],\n      'image/png': [],\n      'image/webp': [],\n      'image/gif': [],\n    },\n  });\n\n  return (\n    <>\n      <div className=\"mb-4 flex flex-wrap gap-x-2\">\n        {file.name && (\n          <button\n            type=\"button\"\n            key={file.name}\n            className=\"group relative h-40 w-52 cursor-pointer overflow-hidden rounded border-2 border-gray-100\"\n            onClick={() => {\n              setFile(new File([], ''));\n            }}\n          >\n            <img\n              alt={file.name}\n              src={(file as any).preview}\n              className=\"rounded-md object-contain\"\n              onLoad={() => {\n                URL.revokeObjectURL((file as any).preview);\n              }}\n            />\n\n            <div className=\"group absolute inset-0 hidden h-full  w-full place-content-center place-items-center bg-gray-100 opacity-50 group-hover:flex\">\n              <IoClose className=\"animate-spin-fast-once text-7xl text-black \" />\n            </div>\n          </button>\n        )}\n      </div>\n      <div\n        {...getRootProps()}\n        className={`${isDragActive && 'bg-gray-100'} ${\n          isDragReject && 'bg-red-100'\n        } ${\n          isDragAccept && 'bg-green-100'\n        } gap-y flex h-[10rem] w-full cursor-pointer flex-col place-content-center place-items-center border-2 border-dashed border-gray-300 text-xl font-bold`}\n      >\n        <input {...getInputProps()} />\n        {isDragReject ? (\n          <p>Unsupported file type...</p>\n        ) : isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <>\n            <p>Drag 'n' drop some files here, or click here to select files</p>\n          </>\n        )}\n        <p className=\"text-lg text-gray-300\">\n          Only *jpg *.jpeg *.png and *.webp images will be accepted\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default CreateBanner;\n"],"names":["Dropzone","initialImage","setImage","file","setFile","onDrop","useCallback","acceptedFiles","mappedFiles","map","Object","assign","preview","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","className","name","type","onClick","File","alt","src","onLoad","revokeObjectURL","navigate","useNavigate","queryClient","useQueryClient","useState","title","setTitle","urlPath","setUrlPath","textPosition","setTextPosition","image","createBanner","useMutation","variables","BannerService","url_path","text_position","onSuccess","data","toast","message","invalidateQueries","handleSubmit","e","preventDefault","size","convertToBase64","imageString","mutate","to","onSubmit","htmlFor","extraClass","border","value","onChange","target","required","selected","setSelected","width","options"],"sourceRoot":""}