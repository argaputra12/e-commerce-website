{"version":3,"file":"static/js/672.3ccf633c.chunk.js","mappings":"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","sources":["components/admin/Dashboard.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\nimport { BsBoxSeam } from 'react-icons/bs';\nimport { TfiMoney } from 'react-icons/tfi';\nimport { useQuery } from 'react-query';\n\nimport { capitalCase } from 'change-case';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport { DashboardService } from '../../api';\nimport { convertToCurrency } from '../util/utilFunc';\nconst pluralize = require('pluralize');\n\nconst Dashboard = () => {\n  const fetchDashboard = useQuery('dashboard', () =>\n    DashboardService.getDashboard()\n  );\n  const fetchSales = useQuery('sales', () => DashboardService.getSales());\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  if (fetchDashboard.isLoading || fetchSales.isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <div className=\"flex w-full place-content-between gap-x-4\">\n        <div className=\" flex  w-full place-content-between place-items-center gap-x-4 border-2 border-gray-400 p-6\">\n          <AiOutlineUserAdd className=\"text-3xl\" />\n          <div className=\"flex w-full flex-col place-items-center\">\n            <div>\n              <p className=\"text-xl\">Total User</p>\n              <p className=\"text-gray-400\">\n                {fetchSales.data?.data.total_user}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\" flex  w-full place-content-between place-items-center gap-x-4 border-2 border-gray-400 p-6\">\n          <BsBoxSeam className=\"text-3xl\" />\n          <div className=\"flex w-full flex-col place-items-center\">\n            <div>\n              <p className=\"text-xl\">Total Order</p>\n              <p className=\"text-gray-400\">\n                {fetchSales.data?.data.total_order}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex  w-full place-content-between place-items-center gap-x-4 border-2 border-gray-400 p-6\">\n          <TfiMoney className=\"text-3xl\" />\n          <div className=\"flex w-full flex-col place-items-center\">\n            <div>\n              <p className=\"text-xl\">Total Sale</p>\n              <p className=\"text-gray-400\">\n                {convertToCurrency(fetchSales.data?.data.total_sales || 0)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex gap-x-4\">\n        <div className=\"mt-5 h-96 w-[65%] border-2 border-gray-400 p-4\">\n          <h1 className=\"text-center text-xl font-bold\">Income Per Month </h1>\n          <p className=\"text-center text-lg text-gray-400\">\n            Per thousand Rupiah\n          </p>\n          <ResponsiveContainer width=\"97%\" height=\"84%\">\n            <LineChart\n              data={fetchDashboard.data?.income_per_month}\n              className=\"mx-1 mt-2\"\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"natural\"\n                dataKey=\"income\"\n                stroke=\"#4b5563\"\n                activeDot={{ r: 8 }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"mt-5 h-96 w-[35%] border-2 border-gray-400 p-4\">\n          <h1 className=\"text-center text-xl font-bold\">\n            Total Order Per Category{' '}\n          </h1>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart width={400} height={400}>\n              <Pie\n                activeIndex={activeIndex}\n                activeShape={RenderPieChart}\n                data={fetchDashboard.data?.total_order_per_category}\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={90}\n                outerRadius={120}\n                className=\"fill-gray-400\"\n                dataKey=\"total_order\"\n                onMouseEnter={(data, index) => setActiveIndex(index)}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst RenderPieChart = (props: any) => {\n  const {\n    cx,\n    cy,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n  } = props;\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={-4} textAnchor=\"middle\" className=\"fill-gray-700\">\n        {capitalCase(pluralize.singular(payload.title))}\n      </text>\n      <text x={cx} y={cy} dy={20} textAnchor=\"middle\" className=\"fill-gray-700\">\n        {payload.total_order} Orders\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n    </g>\n  );\n};\n\nexport default Dashboard;\n"],"names":["pluralize","require","RenderPieChart","props","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","payload","x","y","dy","textAnchor","className","capitalCase","singular","title","total_order","fetchDashboard","useQuery","DashboardService","fetchSales","useState","activeIndex","setActiveIndex","isLoading","data","total_user","convertToCurrency","total_sales","width","height","income_per_month","strokeDasharray","dataKey","type","stroke","activeDot","r","activeShape","total_order_per_category","onMouseEnter","index"],"sourceRoot":""}