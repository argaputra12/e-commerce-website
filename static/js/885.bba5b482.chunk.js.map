{"version":3,"file":"static/js/885.bba5b482.chunk.js","mappings":"oJAsJA,IA9HoC,SAAH,GAU/B,IAV6E,IAAxCA,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UACtDC,EAAgB,WACpBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,EAEIC,EAAwB,GAEnBC,EAAI,EAAGA,GAAKT,EAAUS,IAC7BD,EAAYE,KAAKD,GAGnB,IAAIE,GAAiB,EACjBC,GAAmB,EACnBC,GAAiB,EA0BrB,OAxBIZ,GAAe,GACjBO,EAAc,CAAC,EAAG,EAAG,GACrBI,GAAmB,EACnBD,GAAiB,EACjBE,GAAiB,GACRZ,GAAeD,EAAW,GACnCQ,EAAc,CAACR,EAAW,EAAGA,EAAW,EAAGA,GAC3Ca,GAAiB,EACjBF,GAAiB,EACjBC,GAAmB,IAEnBJ,EAAc,CAACP,EAAc,EAAGA,EAAaA,EAAc,GAC3DU,GAAiB,EACjBC,GAAmB,EACnBC,GAAiB,GAGfb,GAAY,IACdQ,GAAc,OAAIM,MAAMd,IAAWe,KAAI,SAACC,EAAGP,GAAC,OAAKA,EAAI,CAAC,IACtDG,GAAmB,EACnBD,GAAiB,EACjBE,GAAiB,IAIjB,gBAAKI,UAAU,SAAQ,UACrB,gBAAIA,UAAU,8BAA6B,WACzC,yBACE,mBACEC,KAAK,SACL,aAAW,4BACXC,QAAS,WACHlB,EAAc,IAChBC,GAAU,SAACkB,GAAe,yBACrBA,GAAU,IACbC,KAAMD,EAAWC,KAAO,GAAC,IAE3BlB,IAEJ,EACAmB,SAA0B,IAAhBrB,EACVgB,UAAS,UACS,IAAhBhB,EACI,uDACA,iBAAgB,kIAC2G,UAEjI,SAAC,MAAe,SAGlBU,GAAkBE,KAClB,yBACE,iBAAMI,UAAU,0BAAyB,mBAG5CT,EAAYO,KAAI,SAACQ,GAChB,OACE,eAAcN,UAAU,GAAE,UACxB,mBACEC,KAAK,SACLC,QAAS,WACPjB,GAAU,SAACkB,GAAe,yBACrBA,GAAU,IACbC,KAAME,GAAG,IAEXpB,GACF,EACAc,UAAS,UACPM,IAAQtB,GAAe,4BAA2B,mIAC8E,SAEjIsB,KAdIA,EAkBb,KACEZ,GAAkBC,KAClB,yBACE,iBAAMK,UAAU,0BAAyB,oBAG7C,yBACE,mBACEC,KAAK,SACL,aAAW,wBACXC,QAAS,WACHlB,EAAcD,IAChBE,GAAU,SAACkB,GAAe,yBACrBA,GAAU,IACbC,KAAMD,EAAWC,KAAO,GAAC,IAE3BlB,IAEJ,EACAc,UAAS,UACPhB,GAAeD,EACX,uDACA,iBAAgB,mIAC4G,UAElI,SAAC,MAAgB,YAM7B,C,oCCtGA,IAlC+B,SAAH,GAOrB,IANLmB,EAAO,EAAPA,QACAK,EAAI,EAAJA,KACAC,EAAU,EAAVA,WAAW,EAAD,EACVC,SAAAA,OAAQ,OAAQ,MAChBC,SAAAA,OAAQ,OAAO,EACfC,EAAQ,EAARA,SAEIC,EAAU,GASd,OAPEA,EADW,OAATL,EACQ,oBACQ,OAATA,EACC,6BAEA,qBAIV,mBACEN,KAAK,SACLC,QAASA,EACTF,UAAS,kGACNS,GAAY,yBAAwB,YAErCC,EACI,wCACA,sBAAqB,YACvBE,EAAO,YAAIJ,GAAa,SAE3BG,GAGP,C,mOCgDA,EAlFsB,SAAH,GAA0B,IAApBE,EAAK,EAALA,MACvB,GAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAE5B,OACE,iCACE,UAAC,IAAa,CACZC,SAAU,IACVC,OAAQH,EAAW,OAAS,IAC5Bf,UAAU,8EAA6E,WAEvF,yBACGa,EAAMM,SAASrB,KAAI,SAACsB,GAAO,OAC1B,iBAAsBpB,UAAU,oBAAmB,WACjD,gBACEqB,IAAKD,EAAQE,MACbC,IAAKH,EAAQI,KACbxB,UAAU,4BAEZ,iBAAKA,UAAU,wCAAuC,WACpD,iBAAKA,UAAU,eAAc,WAC3B,iBAAMA,UAAU,gBAAe,SAAEoB,EAAQI,OACxCJ,EAAQK,QAAQ3B,KAAI,SAAC4B,EAAQC,GAAK,OACjC,0BACE,kBAAM3B,UAAU,gBAAe,mBACtB0B,EAAOnB,KAAI,eAAcmB,EAAOE,aAFjCD,EAIJ,QAGV,iBAAK3B,UAAU,0EAAyE,WACtF,oCACA,gBAAKA,UAAU,gBAAe,UAC3B6B,EAAAA,EAAAA,IACCT,EAAQK,QAAQK,QACd,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKJ,QAAQ,GAClC,GACER,EAAQa,iBAxBZb,EAAQc,GA6BZ,OAGV,gBACElC,UAAS,UACPe,EAAW,SAAW,WAAU,0EAItC,iBAAKf,UAAU,gDAA+C,WAC5D,oBACEA,UAAU,2QACVE,QAAS,kBAAMc,GAAaD,EAAS,EAAC,WAEtC,yBAAMA,EAAW,YAAc,eAC/B,SAAC,MAAoB,CACnBf,UAAS,oBACPe,EAAW,aAAe,WAAU,yFAEtC,cAAY,aAGhB,iBAAKf,UAAU,gCAA+B,WAC5C,sCACA,iBAAMA,UAAU,gBAAe,UAC5B6B,EAAAA,EAAAA,IACChB,EAAMM,SAASW,QACb,SAACC,EAAKC,GAAI,OACRD,EACAC,EAAKP,QAAQK,QAAO,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKJ,QAAQ,GAAE,GACtDI,EAAKC,KAAK,GACd,cAQhB,ECwEA,EA/Ic,WAAO,IAAD,EAClB,GAA4BnB,EAAAA,EAAAA,UAAwB,CAClDV,KAAM,EACN+B,SAAU,IACV,eAHKC,EAAM,KAAEnD,EAAS,KAKlBoD,GAAaC,EAAAA,EAAAA,UACjB,CAAC,SAAUF,IACX,kBAAMG,EAAAA,GAAAA,cAA0BH,EAAOhC,KAAMgC,EAAOD,SAAS,GAC7D,CACEK,MAAO,IAILC,GAAcC,EAAAA,EAAAA,cAClB,SAACR,GAAU,OAAKS,EAAAA,GAAAA,kBAA+BT,EAAG,GAClD,CACEU,UAAW,SAACC,GACVR,EAAWS,UACXC,EAAAA,GAAAA,QAAcF,EAAKG,QACrB,IAQJ,OAAIX,EAAWY,WACN,yCAIP,gBAAKjD,UAAU,6BAA4B,SACxCqC,GAAcA,EAAWQ,MAAQR,EAAWQ,KAAKA,KAAKK,OAAS,GAC9D,gCACGb,EAAWQ,KAAKA,KAAK/C,KAAI,SAACe,GAAK,OAC9B,0BACE,iBAAKb,UAAU,qDAAoD,WACjE,iBAAKA,UAAU,sFAAqF,WAClG,0BACGmD,IAAMtC,EAAMuC,YAAYC,OACvB,gCAGJ,iBAAMrD,UAAU,iBAAgB,UAC7BsD,EAAAA,EAAAA,GAAYzC,EAAM0C,cAGvB,iBAAKvD,UAAU,iCAAgC,WAC7C,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAQA,UAAU,YAAW,uBAC7B,sCAAca,EAAM2C,oBACpB,qCAAa3C,EAAM4C,sBAErB,iBAAKzD,UAAU,qBAAoB,WACjC,mBAAQA,UAAU,YAAW,sBAE7B,yBAAMa,EAAM6C,0BAGhB,SAAC,EAAa,CAAC7C,MAAOA,KACtB,iBAAKb,UAAU,+FAA8F,WAC3G,iBACEA,UAAS,UACU,cAAjBa,EAAM0C,QACW,YAAjB1C,EAAM0C,QACW,cAAjB1C,EAAM0C,OACF,sCACA,gCAA+B,iCACL,WAEhC,gBAAKvD,UAAU,yDAAwD,UACrE,SAAC,MAAS,OAEZ,gBAAKA,UAAU,GAAE,2BAEnB,gBACEA,UAAS,UACU,YAAjBa,EAAM0C,QAAyC,cAAjB1C,EAAM0C,OAChC,iBACA,cAAa,4BAGrB,iBACEvD,UAAS,UACU,YAAjBa,EAAM0C,QAAyC,cAAjB1C,EAAM0C,OAChC,sCACA,gCAA+B,iCACL,WAEhC,gBAAKvD,UAAU,yDAAwD,UACrE,SAAC,MAAO,OAEV,gBAAKA,UAAU,GAAE,yBAEnB,gBACEA,UAAS,UACU,cAAjBa,EAAM0C,OACF,iBACA,cAAa,6BAGrB,iBACEvD,UAAS,UACU,cAAjBa,EAAM0C,OACF,sCACA,gCAA+B,iCACL,WAEhC,gBAAKvD,UAAU,yDAAwD,UACrE,SAAC,MAAa,OAEhB,gBAAKA,UAAU,GAAE,8BAGrB,gBACEA,UAAS,UACU,YAAjBa,EAAM0C,OAAuB,OAAS,SAAQ,4BACrB,UAE3B,SAACI,EAAA,EAAW,CAACzD,QAAS,kBAjGfgC,EAiGmCrB,EAAMqB,QAhG9DO,EAAYmB,OAAO1B,GADC,IAACA,CAiG4C,EAAC,kCApFhDrB,EAAMqB,GAyFV,KAER,SAAC2B,EAAA,EAAU,CACT7E,YAAaoD,EAAOhC,KACpBrB,UAAyB,QAAf,EAAAsD,EAAWQ,YAAI,aAAf,EAAiBiB,WAAWC,aAAc,GACpD9E,UAAWA,QAIf,gBAAKe,UAAU,0CAAyC,gCAMhE,C","sources":["components/Pagination.tsx","components/button/GhostButton.tsx","components/profile/OrderProducts.tsx","components/profile/Order.tsx"],"sourcesContent":["import { CgArrowLongLeft, CgArrowLongRight } from 'react-icons/cg';\ninterface ProductParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\ninterface DefaultParams {\n  page: number;\n  pageSize: number;\n}\n\ninterface Props {\n  lastPage: number;\n  currentPage: number;\n  setParams:\n    | React.Dispatch<React.SetStateAction<ProductParams>>\n    | React.Dispatch<React.SetStateAction<DefaultParams>>;\n}\n\nconst Pagination: React.FC<Props> = ({ lastPage, currentPage, setParams }) => {\n  const scrolledToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  let pageNumbers: number[] = [];\n\n  for (let i = 1; i <= lastPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  let midPageNumbers = false;\n  let startPageNumbers = false;\n  let endPageNumbers = false;\n\n  if (currentPage <= 2) {\n    pageNumbers = [1, 2, 3];\n    startPageNumbers = true;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  } else if (currentPage >= lastPage - 1) {\n    pageNumbers = [lastPage - 2, lastPage - 1, lastPage];\n    endPageNumbers = true;\n    midPageNumbers = false;\n    startPageNumbers = false;\n  } else {\n    pageNumbers = [currentPage - 1, currentPage, currentPage + 1];\n    midPageNumbers = true;\n    startPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  if (lastPage <= 3) {\n    pageNumbers = [...Array(lastPage)].map((_, i) => i + 1);\n    startPageNumbers = false;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  return (\n    <div className=\"w-full\">\n      <ul className=\"mx-auto flex justify-center\">\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Previous Page\"\n            onClick={() => {\n              if (currentPage > 1) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page - 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            disabled={currentPage === 1}\n            className={`${\n              currentPage === 1\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16 items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongLeft />\n          </button>\n        </li>\n        {(midPageNumbers || endPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        {pageNumbers.map((num) => {\n          return (\n            <li key={num} className=\"\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setParams((prevParams: any) => ({\n                    ...prevParams,\n                    page: num,\n                  }));\n                  scrolledToTop();\n                }}\n                className={`${\n                  num === currentPage && 'bg-gray-500 text-gray-100'\n                } mx-1 flex h-10 w-10 cursor-pointer items-center justify-center border hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n              >\n                {num}\n              </button>\n            </li>\n          );\n        })}\n        {(midPageNumbers || startPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Next Page\"\n            onClick={() => {\n              if (currentPage < lastPage) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page + 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            className={`${\n              currentPage >= lastPage\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16  items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongRight />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { FC } from 'react';\n\ninterface Props {\n  extraClass?: string;\n  size?: 'sm' | 'normal' | 'lg';\n  inverted?: boolean;\n  noBorder?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n}\n\n// eslint-disable-next-line react/display-name\nconst GhostButton: FC<Props> = ({\n  onClick,\n  size,\n  extraClass,\n  noBorder = false,\n  inverted = true,\n  children,\n}) => {\n  let btnSize = '';\n  if (size === 'sm') {\n    btnSize = 'py-2 sm:py-1 px-5';\n  } else if (size === 'lg') {\n    btnSize = 'py-4 sm:py-3 px-7  text-xl';\n  } else {\n    btnSize = 'py-3 sm:py-2 px-6';\n  }\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={`cursor-pointer bg-white text-center text-xl tracking-widest text-gray-500 sm:text-base ${\n        !noBorder && 'border border-gray-500'\n      } ${\n        inverted\n          ? 'hover:bg-gray-500 hover:text-gray-100'\n          : 'hover:text-gray-400'\n      } ${btnSize} ${extraClass}`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default GhostButton;\n","import { useState } from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { HiOutlineChevronDown } from 'react-icons/hi';\n\nimport { GetOrder } from '../../api';\nimport { convertToCurrency } from '../util/utilFunc';\ninterface props {\n  order: GetOrder;\n}\n\nconst OrderProducts = ({ order }: props) => {\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <>\n      <AnimateHeight\n        duration={500}\n        height={showMore ? 'auto' : 100}\n        className=\" relative my-4 border-t border-y-gray-100 py-2 transition-all  duration-500\"\n      >\n        <div>\n          {order.products.map((product) => (\n            <div key={product.id} className=\"flex gap-x-4 py-4\">\n              <img\n                src={product.image}\n                alt={product.name}\n                className=\"h-20 w-20 object-cover\"\n              />\n              <div className=\"flex w-full justify-between pl-2 pr-6\">\n                <div className=\"left-product\">\n                  <span className=\"font-semibold\">{product.name}</span>\n                  {product.details.map((detail, index) => (\n                    <div key={index}>\n                      <span className=\"text-gray-300\">\n                        Size: {detail.size}, Quantity: {detail.quantity}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"flex w-40   flex-col place-content-center border-l border-gray-100 pl-4\">\n                  <div>Price</div>\n                  <div className=\"font-semibold\">\n                    {convertToCurrency(\n                      product.details.reduce(\n                        (acc, curr) => acc + curr.quantity,\n                        0\n                      ) * product.price\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div\n          className={`${\n            showMore ? 'hidden' : 'absolute'\n          } bottom-0 h-10 w-full bg-gradient-to-t from-white to-transparent`}\n        ></div>\n      </AnimateHeight>\n      <div className=\"mt-4  flex w-full flex-col place-content-end \">\n        <button\n          className=\"boder-b-gray-100 mb-4 flex w-full min-w-[8rem] flex-row place-items-center justify-end gap-x-2 border-0 border-b px-1 pb-2 pr-[5.5rem] text-sm text-gray-300 outline-0 transition duration-500 ease-in-out hover:text-black hover:outline-0 hover:ring-0 focus:outline-0\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          <div>{showMore ? 'Show Less' : 'Show More'}</div>\n          <HiOutlineChevronDown\n            className={`transform ${\n              showMore ? 'rotate-180' : 'rotate-0'\n            } inline-block transform text-[1.5rem] opacity-60 transition duration-500 ease-in-out `}\n            aria-hidden=\"true\"\n          />\n        </button>\n        <div className=\"w-full pr-[5.5rem] text-right\">\n          <span>Total </span>\n          <span className=\"font-semibold\">\n            {convertToCurrency(\n              order.products.reduce(\n                (acc, curr) =>\n                  acc +\n                  curr.details.reduce((acc, curr) => acc + curr.quantity, 0) *\n                    curr.price,\n                0\n              )\n            )}\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OrderProducts;\n","import { useState } from 'react';\nimport { BsBoxSeam, BsTruck } from 'react-icons/bs';\nimport { IoMdCheckmark } from 'react-icons/io';\nimport { useMutation, useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\n\nimport { capitalCase } from 'change-case';\nimport dayjs from 'dayjs';\n\nimport { OrderService, UserService } from '../../api';\nimport GhostButton from '../button/GhostButton';\nimport Pagination from '../Pagination';\nimport OrderProducts from './OrderProducts';\n\ninterface DefaultParams {\n  page: number;\n  pageSize: number;\n}\n\nconst Order = () => {\n  const [params, setParams] = useState<DefaultParams>({\n    page: 1,\n    pageSize: 5,\n  });\n\n  const fetchOrder = useQuery(\n    ['orders', params],\n    () => UserService.getOrdersUser(params.page, params.pageSize),\n    {\n      retry: 0,\n    }\n  );\n\n  const updateOrder = useMutation(\n    (id: string) => OrderService.updateOrderStatus(id),\n    {\n      onSuccess: (data) => {\n        fetchOrder.refetch();\n        toast.success(data.message);\n      },\n    }\n  );\n\n  const completeOrder = (id: string) => {\n    updateOrder.mutate(id);\n  };\n\n  if (fetchOrder.isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col gap-y-4 pl-4\">\n      {fetchOrder && fetchOrder.data && fetchOrder.data.data.length > 0 ? (\n        <>\n          {fetchOrder.data.data.map((order) => (\n            <div key={order.id}>\n              <div className=\"w-full border-2 border-gray-400 p-8  text-gray-600\">\n                <div className=\"mb-4 flex w-full place-content-between pb-4  text-[1.05rem] uppercase text-gray-400\">\n                  <span>\n                    {dayjs(order.created_at).format(\n                      'dddd, MMMM D YYYY, h:mm A'\n                    )}\n                  </span>\n                  <span className=\"tracking-wider\">\n                    {capitalCase(order.status)}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 text-gray-400\">\n                  <div className=\"flex flex-col \">\n                    <strong className=\"uppercase\">Shipping</strong>\n                    <div>Method: {order.shipping_method}</div>\n                    <div>Price: {order.shipping_price}</div>\n                  </div>\n                  <div className=\"flex w-52 flex-col\">\n                    <strong className=\"uppercase\">Address</strong>\n                    {/* <div>{order.address_name}</div> */}\n                    <div>{order.shipping_address}</div>\n                  </div>\n                </div>\n                <OrderProducts order={order} />\n                <div className=\"order-status mx-auto mt-16 flex max-w-[44rem] place-content-between place-items-center py-2 \">\n                  <div\n                    className={`${\n                      order.status === 'processed' ||\n                      order.status === 'shipped' ||\n                      order.status === 'completed'\n                        ? 'border-emerald-300 text-emerald-300'\n                        : 'border-gray-200 text-gray-200'\n                    } status flex flex-col gap-y-2`}\n                  >\n                    <div className=\"rounded-full border-[3px] border-current p-4  text-4xl\">\n                      <BsBoxSeam />\n                    </div>\n                    <div className=\"\">Processed</div>\n                  </div>\n                  <div\n                    className={`${\n                      order.status === 'shipped' || order.status === 'completed'\n                        ? 'bg-emerald-300'\n                        : 'bg-gray-200'\n                    } line mb-7 h-1 w-full`}\n                  ></div>\n                  <div\n                    className={`${\n                      order.status === 'shipped' || order.status === 'completed'\n                        ? 'border-emerald-300 text-emerald-300'\n                        : 'border-gray-200 text-gray-200'\n                    } status flex flex-col gap-y-2`}\n                  >\n                    <div className=\"rounded-full border-[3px] border-current p-4  text-4xl\">\n                      <BsTruck />\n                    </div>\n                    <div className=\"\">Shipped</div>\n                  </div>\n                  <div\n                    className={`${\n                      order.status === 'completed'\n                        ? 'bg-emerald-300'\n                        : 'bg-gray-200'\n                    } line mb-7 h-1 w-full `}\n                  ></div>\n                  <div\n                    className={`${\n                      order.status === 'completed'\n                        ? 'border-emerald-300 text-emerald-300'\n                        : 'border-gray-200 text-gray-200'\n                    } status flex flex-col gap-y-2`}\n                  >\n                    <div className=\"rounded-full border-[3px] border-current p-4  text-4xl\">\n                      <IoMdCheckmark />\n                    </div>\n                    <div className=\"\">Completed</div>\n                  </div>\n                </div>\n                <div\n                  className={`${\n                    order.status === 'shipped' ? 'flex' : 'hidden'\n                  } mt-12 place-content-end`}\n                >\n                  <GhostButton onClick={() => completeOrder(order.id)}>\n                    Complete Order\n                  </GhostButton>\n                </div>\n              </div>\n            </div>\n          ))}\n          <Pagination\n            currentPage={params.page}\n            lastPage={fetchOrder.data?.pagination.total_page || 10}\n            setParams={setParams}\n          />\n        </>\n      ) : (\n        <div className=\"text-center text-2xl text-gray-400 mt-8\">\n          You have no order\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Order;\n"],"names":["lastPage","currentPage","setParams","scrolledToTop","window","scrollTo","top","behavior","pageNumbers","i","push","midPageNumbers","startPageNumbers","endPageNumbers","Array","map","_","className","type","onClick","prevParams","page","disabled","num","size","extraClass","noBorder","inverted","children","btnSize","order","useState","showMore","setShowMore","duration","height","products","product","src","image","alt","name","details","detail","index","quantity","convertToCurrency","reduce","acc","curr","price","id","pageSize","params","fetchOrder","useQuery","UserService","retry","updateOrder","useMutation","OrderService","onSuccess","data","refetch","toast","message","isLoading","length","dayjs","created_at","format","capitalCase","status","shipping_method","shipping_price","shipping_address","GhostButton","mutate","Pagination","pagination","total_page"],"sourceRoot":""}