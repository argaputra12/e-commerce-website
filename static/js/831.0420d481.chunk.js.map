{"version":3,"file":"static/js/831.0420d481.chunk.js","mappings":"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","sources":["components/input/LegendInput.tsx","components/profile/ChangePassword.tsx","components/profile/TopUp.tsx","components/profile/Modal.tsx","components/profile/PersonalData.tsx"],"sourcesContent":["import { FC, FormEvent } from 'react';\n\ninterface Props {\n  type?: string;\n  name: string;\n  placeholder?: string;\n  extraClass?: string;\n  required?: boolean;\n  border?: string;\n  id?: string;\n  label?: string;\n  onChange?: (e: FormEvent<HTMLInputElement>) => void;\n  value?: string | number;\n  readOnly?: boolean;\n}\n\nconst LegendInput: FC<Props> = ({\n  type = 'text',\n  name,\n  placeholder,\n  extraClass,\n  required = false,\n  border = '',\n  label = '',\n  onChange,\n  value,\n  readOnly = false,\n}) => (\n  <fieldset\n    className={`${\n      !readOnly ? 'focus-within:border-gray-700' : ''\n    } w-full border border-gray-300 pb-2 `}\n  >\n    <legend className=\"ml-2 pr-2 pl-1 font-semibold\">{label}</legend>\n    <input\n      type={type}\n      name={name}\n      placeholder={placeholder}\n      required={required}\n      onChange={onChange}\n      value={value}\n      aria-label={label}\n      className={`w-full  pl-6 ${extraClass}`}\n      readOnly={readOnly}\n    />\n  </fieldset>\n);\n\nexport default LegendInput;\n","import React, { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { toast } from 'react-toastify';\n\nimport { Dialog } from '@headlessui/react';\n\nimport { ApiError, AuthenticationService } from '../../api';\nimport Button from '../button/Button';\nimport Input from '../input/Input';\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst ChangePassword: React.FC<Props> = ({ closeModal }) => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const changePassword = useMutation(\n    (variables: { currentPassword: string; newPassword: string }) =>\n      AuthenticationService.changePassword({\n        old_password: variables.currentPassword,\n        new_password: variables.newPassword,\n      }),\n    {\n      onSuccess: (data) => {\n        toast.success(data.message);\n        closeModal();\n      },\n      onError: (error: ApiError) => {\n        setErrorMsg(error.body.message);\n      },\n    }\n  );\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    changePassword.mutate({ currentPassword, newPassword });\n  };\n\n  return (\n    <>\n      <Dialog.Title\n        as=\"h3\"\n        className=\"my-8 text-center text-4xl font-medium leading-6 text-gray-800\"\n      >\n        Change Password\n      </Dialog.Title>\n      <form onSubmit={handleSubmit} className=\"mt-2\">\n        <Input\n          type=\"password\"\n          placeholder={'Current Password *'}\n          name=\"password\"\n          required\n          extraClass={`w-full focus:border-gray-500 mb-4 ${\n            errorMsg ? 'border-red-300' : ''\n          }`}\n          border=\"border-2 border-gray-300 mb-4\"\n          onChange={(e) =>\n            setCurrentPassword((e.target as HTMLInputElement).value)\n          }\n          value={currentPassword}\n        />\n        <Input\n          type=\"password\"\n          placeholder={'New Password *'}\n          name=\"password\"\n          required\n          extraClass={`w-full focus:border-gray-500 mb-4 ${\n            errorMsg ? 'border-red-300' : ''\n          }`}\n          border=\"border-2 border-gray-300\"\n          onChange={(e) => setNewPassword((e.target as HTMLInputElement).value)}\n          value={newPassword}\n        />\n        {errorMsg !== '' && (\n          <div className=\"mb-4 whitespace-nowrap text-sm text-red-600\">\n            {errorMsg}\n          </div>\n        )}\n\n        <Button\n          type=\"submit\"\n          value=\"Change Password\"\n          extraClass=\"w-full text-center text-xl mb-4\"\n          size=\"lg\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { toast } from 'react-toastify';\n\nimport { Dialog } from '@headlessui/react';\n\nimport { ApiError, UserService } from '../../api';\nimport Button from '../button/Button';\nimport Input from '../input/Input';\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst TopUp: React.FC<Props> = ({ closeModal }) => {\n  const [balance, setBalance] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const topUp = useMutation(\n    (variables: { balance: number }) =>\n      UserService.updateUserBalance({\n        balance: variables.balance,\n      }),\n    {\n      onSuccess: (data) => {\n        toast.success(data.message);\n        closeModal();\n      },\n      onError: (error: ApiError) => {\n        setErrorMsg(error.body.message);\n      },\n    }\n  );\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    topUp.mutate({ balance });\n  };\n\n  return (\n    <>\n      <Dialog.Title\n        as=\"h3\"\n        className=\"my-8 text-center text-4xl font-medium leading-6 text-gray-800\"\n      >\n        Top Up Balance\n      </Dialog.Title>\n      <form onSubmit={handleSubmit} className=\"mt-2\">\n        <Input\n          type=\"number\"\n          placeholder={'Amount *'}\n          name=\"amount\"\n          required\n          extraClass={`w-full focus:border-gray-500 mb-4 ${\n            errorMsg ? 'border-red-300' : ''\n          }`}\n          border=\"border-2 border-gray-300 mb-4\"\n          onChange={(e) =>\n            setBalance(Number((e.target as HTMLInputElement).value))\n          }\n          value={balance.toString()}\n        />\n        {errorMsg !== '' && (\n          <div className=\"mb-4 whitespace-nowrap text-sm text-red-600\">\n            {errorMsg}\n          </div>\n        )}\n\n        <Button\n          type=\"submit\"\n          value=\"Top Up\"\n          extraClass=\"w-full text-center text-xl mb-4\"\n          size=\"lg\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default TopUp;\n","import { FC, Fragment, useState } from 'react';\nimport { IoCloseOutline } from 'react-icons/io5';\n\nimport { Dialog, Transition } from '@headlessui/react';\n\nimport ChangePassword from './ChangePassword';\nimport TopUp from './TopUp';\ninterface Props {\n  buttonText: string;\n  refetch?: () => void;\n}\nconst Modal: FC<Props> = ({ buttonText, refetch }) => {\n  const [open, setOpen] = useState(false);\n\n  let modalBox: JSX.Element = <></>;\n\n  const closeModal = () => {\n    refetch != null && refetch();\n    setOpen(false);\n  };\n\n  if (buttonText === 'Change Password') {\n    modalBox = <ChangePassword closeModal={closeModal} />;\n  } else if (buttonText === 'Top Up') {\n    modalBox = <TopUp closeModal={closeModal} />;\n  }\n  return (\n    <>\n      <div>\n        <button\n          onClick={() => setOpen(true)}\n          className=\" flex w-full cursor-pointer items-center justify-center border border-gray-300 py-2 px-4 hover:bg-gray-500 hover:text-gray-100 sm:w-52 \"\n          aria-label={buttonText}\n        >\n          {buttonText}\n        </button>\n      </div>\n      <Transition show={open} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-[999] overflow-y-auto\"\n          static\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <div className=\"min-h-screen px-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-[rgba(107,114,128,0.4)]\" />\n            </Transition.Child>\n\n            {/* This element is to trick the browser into centering the modal contents. */}\n            <span\n              className=\"inline-block h-screen align-middle\"\n              aria-hidden=\"true\"\n            >\n              &#8203;\n            </span>\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"relative my-8 inline-block w-full max-w-md transform overflow-hidden bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                <button\n                  type=\"button\"\n                  className=\"absolute right-4 top-3 text-4xl outline-none focus:outline-none\"\n                  onClick={() => setOpen(false)}\n                >\n                  <IoCloseOutline />\n                </button>\n                {modalBox}\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\n\nimport { ApiError, UserService } from '../../api';\nimport Button from '../button/Button';\nimport LegendInput from '../input/LegendInput';\nimport Modal from './Modal';\nconst PersonalData = () => {\n  const [addressName, setAddressName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n\n  const fetchUser = useQuery('user', () => UserService.getUser(), {\n    staleTime: Infinity,\n  });\n\n  useEffect(() => {\n    if (fetchUser.data != null) {\n      setAddressName(fetchUser.data.address_name || '');\n      setPhoneNumber(fetchUser.data.phone_number || '');\n      setAddress(fetchUser.data.address || '');\n      setCity(fetchUser.data.city || '');\n    }\n  }, [fetchUser.data]);\n\n  const refetch = () => {\n    fetchUser.refetch();\n  };\n\n  const ChangeAddress = useMutation(\n    (variables: {\n      addressName: string;\n      phoneNumber: string;\n      address: string;\n      city: string;\n    }) =>\n      UserService.updateUserShippingAddress({\n        address_name: variables.addressName,\n        phone_number: variables.phoneNumber,\n        address: variables.address,\n        city: variables.city,\n      }),\n    {\n      onSuccess: (data) => {\n        toast.success(data.message);\n      },\n      onError: (error: ApiError) => {\n        toast.error(error.body.message);\n      },\n    }\n  );\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    ChangeAddress.mutate({ addressName, phoneNumber, address, city });\n  };\n\n  if (fetchUser.isError) {\n    return <div>Error...</div>;\n  }\n  if (fetchUser.isLoading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"pl-5 pt-3\">\n      {/*  ===== General Information ===== */}\n      <h2 className=\"w-full text-2xl font-medium\">General Information</h2>\n      <div className=\"information flex w-full flex-col gap-y-4 py-4 text-lg text-gray-700\">\n        <LegendInput\n          name=\"name\"\n          label=\"Full Name\"\n          value={fetchUser.data?.name}\n          readOnly={true}\n        />\n        <LegendInput\n          name=\"email\"\n          label=\"Email\"\n          value={fetchUser.data?.email}\n          readOnly={true}\n        />\n        <div className=\"flex place-content-end\">\n          <Modal buttonText=\"Change Password\"></Modal>\n        </div>\n      </div>\n\n      {/*  ===== Your Balance ===== */}\n      <h2 className=\"w-full text-2xl font-medium\">Your Balance</h2>\n      <div className=\"information flex w-full flex-col gap-y-4 py-4 text-lg text-gray-700\">\n        <LegendInput\n          name=\"balance\"\n          label=\"Balance\"\n          type=\"number\"\n          value={fetchUser.data?.balance}\n          readOnly={true}\n        />\n\n        <div className=\"flex place-content-end\">\n          <Modal buttonText=\"Top Up\" refetch={refetch}></Modal>\n        </div>\n      </div>\n\n      {/*  ===== Your Address ===== */}\n      <h2 className=\"w-full text-2xl font-medium\">Your Address</h2>\n      <form\n        className=\"information flex w-full flex-col gap-y-4 py-4 text-lg text-gray-700 \"\n        onSubmit={handleSubmit}\n      >\n        <LegendInput\n          name=\"address-name\"\n          label=\"Address Name\"\n          value={addressName}\n          onChange={(e) => setAddressName((e.target as HTMLInputElement).value)}\n        />\n        <LegendInput\n          name=\"phone-number\"\n          label=\"Phone Number\"\n          value={phoneNumber}\n          onChange={(e) => setPhoneNumber((e.target as HTMLInputElement).value)}\n        />\n        <LegendInput\n          name=\"address\"\n          label=\"Address\"\n          value={address}\n          onChange={(e) => setAddress((e.target as HTMLInputElement).value)}\n        />\n        <LegendInput\n          name=\"city\"\n          label=\"City\"\n          value={city}\n          onChange={(e) => setCity((e.target as HTMLInputElement).value)}\n        />\n        <div className=\"mt-8 flex place-content-end\">\n          <Button\n            type=\"submit\"\n            value=\"Update Address\"\n            extraClass=\"w-52 text-center text-xl mb-4\"\n            size=\"lg\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonalData;\n"],"names":["type","name","placeholder","extraClass","required","border","label","onChange","value","readOnly","className","closeModal","useState","currentPassword","setCurrentPassword","newPassword","setNewPassword","errorMsg","setErrorMsg","changePassword","useMutation","variables","AuthenticationService","old_password","new_password","onSuccess","data","toast","message","onError","error","body","handleSubmit","e","preventDefault","mutate","as","onSubmit","Input","target","Button","size","balance","setBalance","topUp","UserService","Number","toString","buttonText","refetch","open","setOpen","modalBox","onClick","show","Fragment","static","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","addressName","setAddressName","phoneNumber","setPhoneNumber","address","setAddress","city","setCity","fetchUser","useQuery","staleTime","Infinity","useEffect","address_name","phone_number","ChangeAddress","isError","isLoading","email"],"sourceRoot":""}