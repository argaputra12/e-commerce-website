{"version":3,"file":"static/js/945.ad25a887.chunk.js","mappings":"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","sources":["components/admin/Dropzone.tsx","components/admin/Product.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { IoClose } from 'react-icons/io5';\n\ninterface props {\n  initialImages: string[];\n  setImages: React.Dispatch<React.SetStateAction<string[]>>;\n  files: File[];\n  setFiles: React.Dispatch<React.SetStateAction<File[]>>;\n}\n\nconst Dropzone = ({ initialImages, setImages, files, setFiles }: props) => {\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const mappedFiles = acceptedFiles.map((file) => {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        });\n      });\n      setFiles((current) => [...current, ...mappedFiles]);\n    },\n    [setFiles]\n  );\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/jpeg': [],\n      'image/jpg': [],\n      'image/png': [],\n      'image/webp': [],\n      'image/gif': [],\n    },\n  });\n\n  return (\n    <>\n      <div className=\"mb-4 flex flex-wrap gap-x-2\">\n        {initialImages.map((image, index) => (\n          <button\n            type=\"button\"\n            key={index}\n            className=\"group relative h-52 w-40 cursor-pointer overflow-hidden rounded border-2  border-gray-100\"\n            onClick={() => {\n              setImages(\n                initialImages.filter((selectedImage) => selectedImage !== image)\n              );\n            }}\n          >\n            <img\n              src={image}\n              alt=\"\"\n              className=\"rounded-md object-contain object-bottom\"\n            />\n            <div className=\"group absolute inset-0 hidden h-full  w-full place-content-center place-items-center bg-gray-100 opacity-50 group-hover:flex\">\n              <IoClose className=\"animate-spin-fast-once text-7xl text-black \" />\n            </div>\n          </button>\n        ))}\n        {files.map((file) => (\n          <button\n            type=\"button\"\n            key={file.name}\n            className=\"group relative h-52 w-40 cursor-pointer overflow-hidden rounded border-2 border-gray-100\"\n            onClick={() => {\n              setFiles(files.filter((f) => f.name !== file.name));\n            }}\n          >\n            <img\n              alt={file.name}\n              src={(file as any).preview}\n              className=\"rounded-md object-contain object-bottom\"\n              onLoad={() => {\n                URL.revokeObjectURL((file as any).preview);\n              }}\n            />\n\n            <div className=\"group absolute inset-0 hidden h-full  w-full place-content-center place-items-center bg-gray-100 opacity-50 group-hover:flex\">\n              <IoClose className=\"animate-spin-fast-once text-7xl text-black \" />\n            </div>\n          </button>\n        ))}\n      </div>\n      <div\n        {...getRootProps()}\n        className={`${isDragActive && 'bg-gray-100'} ${\n          isDragReject && 'bg-red-100'\n        } ${\n          isDragAccept && 'bg-green-100'\n        } gap-y flex h-[10rem] w-full cursor-pointer flex-col place-content-center place-items-center border-2 border-dashed border-gray-300 text-xl font-bold`}\n      >\n        <input {...getInputProps()} />\n        {isDragReject ? (\n          <p>Unsupported file type...</p>\n        ) : isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <>\n            <p>Drag 'n' drop some files here, or click here to select files</p>\n          </>\n        )}\n        <p className=\"text-lg text-gray-300\">\n          Only *jpg *.jpeg *.png and *.webp images will be accepted\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Dropzone;\n","import { useState } from 'react';\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport {\n  ApiError,\n  CategoryService,\n  ProductService,\n  Stock,\n  UpdateStock,\n} from '../../api';\nimport Button from '../button/Button';\nimport Dropdown from '../input/Dropdown';\nimport Input from '../input/Input';\nimport { convertToBase64 } from '../util/utilFunc';\nimport Dropzone from './Dropzone';\n\ninterface categoryType {\n  id: string;\n  title: string;\n}\n\nconst Product = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const [title, setTitle] = useState('');\n  const [brand, setBrand] = useState('');\n  const [detail, setDetail] = useState('');\n  const [price, setPrice] = useState(0);\n  const [category, setCategory] = useState('');\n  const [condition, setCondition] = useState('');\n  const [stock, setStock] = useState<Stock[]>([]);\n  const [categoryOptions, setCategoryOptions] = useState<categoryType[]>([]);\n  const [images, setImages] = useState<string[]>([]);\n  const [files, setFiles] = useState<File[]>([]);\n\n  const updateProduct = useMutation(\n    (variables: {\n      title: string;\n      brand: string;\n      detail: string;\n      price: number;\n      category: string;\n      condition: string;\n      stock: UpdateStock[];\n      images: string[];\n    }) =>\n      ProductService.updateProduct({\n        id: id as string,\n        title: variables.title,\n        brand: variables.brand,\n        product_detail: variables.detail,\n        images: variables.images,\n        price: variables.price,\n        category_id: variables.category,\n        condition: variables.condition,\n        stock: variables.stock,\n      }),\n    {\n      onSuccess: () => {\n        toast.success('Product updated');\n      },\n      onError: (error: ApiError) => {\n        toast.error(error.body.message);\n      },\n    }\n  );\n\n  const fetchProduct = useQuery(\n    ['product', id],\n    () => ProductService.getProduct(id as string),\n    {\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        setTitle(data.title);\n        setBrand(data.brand);\n        setDetail(data.product_detail);\n        setPrice(data.price);\n        setCategory(data.category_name);\n        setCondition(data.condition);\n        setStock(data.stock as Stock[]);\n        setImages(data.images);\n      },\n    }\n  );\n\n  const fetchCategories = useQuery(\n    'categories',\n    () => CategoryService.getCategory(),\n    {\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        setCategoryOptions(\n          data.data.map((category) => ({\n            id: category.id,\n            title: category.title,\n          }))\n        );\n      },\n    }\n  );\n\n  const deleteProduct = useMutation(\n    (id: string) => ProductService.deleteProduct(id),\n    {\n      onSuccess: (data) => {\n        toast.success(data.message);\n        queryClient.invalidateQueries('products');\n        navigate('/admin/products');\n      },\n      onError: (error: ApiError) => {\n        toast.error(error.body.message);\n      },\n    }\n  );\n\n  if (fetchProduct.isLoading || fetchCategories.isLoading || !id) {\n    return <div>Loading...</div>;\n  }\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const base64Images = await Promise.all(\n      files.map(async (file) => await convertToBase64(file))\n    );\n\n    const combinedImages = [...images, ...base64Images] as string[];\n\n    const selectedCategory = categoryOptions.find(\n      (option) => option.title === category\n    );\n\n    updateProduct.mutate({\n      title,\n      brand,\n      detail,\n      price,\n      category: selectedCategory?.id as string,\n      condition,\n      stock,\n      images: combinedImages,\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"w-full text-2xl font-medium\">Update Product</h2>\n      <div className=\"flex py-3 \">\n        <Link to=\"/admin/products\" className=\"flex place-items-center  gap-x-2\">\n          <HiOutlineChevronLeft className=\"text-xl\" />\n          Go Back\n        </Link>\n      </div>\n      <form\n        className=\"information flex w-full flex-col gap-y-4 py-4 text-lg text-gray-700 \"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"\">\n          <label htmlFor=\"name\" className=\"text-lg\">\n            Name\n          </label>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            extraClass=\"w-full mt-1 mb-2\"\n            border=\"border-2 border-gray-400\"\n            value={title}\n            onChange={(e) => setTitle((e.target as HTMLInputElement).value)}\n            required\n          />\n        </div>\n        <div className=\"\">\n          <label htmlFor=\"brand\" className=\"text-lg\">\n            Brand\n          </label>\n          <Input\n            name=\"brand\"\n            type=\"text\"\n            extraClass=\"w-full mt-1 mb-2\"\n            border=\"border-2 border-gray-400\"\n            value={brand}\n            onChange={(e) => setBrand((e.target as HTMLInputElement).value)}\n            required\n          />\n        </div>\n        <div className=\"\">\n          <label htmlFor=\"address\" className=\"text-lg\">\n            Product Detail\n          </label>\n          <textarea\n            aria-label=\"Address\"\n            className=\"mt-1 mb-2 w-full border-2 border-gray-400 p-4 outline-none\"\n            rows={4}\n            value={detail}\n            onChange={(e) => setDetail((e.target as HTMLTextAreaElement).value)}\n            required\n          />\n          <div className=\"flex flex-wrap place-content-between gap-x-4\">\n            <div className=\"w-full min-w-[10rem] flex-1\">\n              <div className=\"mb-1 text-lg\">Price</div>\n              <Input\n                name=\"price\"\n                type=\"number\"\n                extraClass=\"w-full mt-1 mb-2\"\n                border=\"border-2 border-gray-400\"\n                value={price.toString()}\n                onChange={(e) =>\n                  setPrice(Number((e.target as HTMLInputElement).value))\n                }\n                required\n              />\n            </div>\n            <div className=\"\">\n              <div className=\"mb-2 text-lg\">Category Type</div>\n              <Dropdown\n                selected={category}\n                setSelected={setCategory}\n                width=\"w-64\"\n                border=\"border-2 border-gray-400\"\n                options={categoryOptions.map((category) => category.title)}\n              />\n            </div>\n            <div className=\"\">\n              <div className=\"mb-2 text-lg\">Condition</div>\n              <Dropdown\n                selected={condition}\n                setSelected={setCondition}\n                width=\"w-64\"\n                border=\"border-2 border-gray-400\"\n                options={['new', 'used']}\n              />\n            </div>\n          </div>\n          <div className=\"my-4 flex flex-wrap gap-x-4\">\n            {stock.map((item) => (\n              <div className=\"min-w-[10rem] flex-1\" key={item.size}>\n                <label htmlFor=\"stock\" className=\"text-lg\">\n                  Size {item.size}\n                </label>\n                <Input\n                  name=\"stock\"\n                  type=\"text\"\n                  extraClass=\"w-full mt-1 mb-2\"\n                  border=\"border-2 border-gray-400\"\n                  value={item.quantity.toString()}\n                  onChange={(e) =>\n                    setStock((prev) =>\n                      prev.map((stock) =>\n                        stock.size === item.size\n                          ? {\n                              ...stock,\n                              quantity: Number(\n                                (e.target as HTMLInputElement).value\n                              ),\n                            }\n                          : stock\n                      )\n                    )\n                  }\n                  required\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\" border-2 border-gray-400 p-4\">\n          <Dropzone\n            initialImages={images}\n            setImages={setImages}\n            files={files}\n            setFiles={setFiles}\n          />\n        </div>\n        <div className=\"mt-8 flex place-content-between\">\n          <button\n            type=\"button\"\n            onClick={() => deleteProduct.mutate(id)}\n            className=\"mb-4 w-52 border border-gray-500 py-3 px-6 text-center text-xl hover:bg-gray-500  hover:text-gray-100 sm:py-2 sm:text-base\"\n            aria-label=\"Delete Product\"\n          >\n            Delete Product\n          </button>\n          <Button\n            type=\"submit\"\n            value=\"Update Product\"\n            extraClass=\"w-52 text-center text-xl mb-4\"\n            size=\"lg\"\n          />\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Product;\n"],"names":["initialImages","setImages","files","setFiles","onDrop","useCallback","acceptedFiles","mappedFiles","map","file","Object","assign","preview","URL","createObjectURL","current","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","className","image","index","type","onClick","filter","selectedImage","src","alt","f","name","onLoad","revokeObjectURL","id","useParams","navigate","useNavigate","queryClient","useQueryClient","useState","title","setTitle","brand","setBrand","detail","setDetail","price","setPrice","category","setCategory","condition","setCondition","stock","setStock","categoryOptions","setCategoryOptions","images","updateProduct","useMutation","variables","ProductService","product_detail","category_id","onSuccess","toast","onError","error","body","message","fetchProduct","useQuery","refetchOnWindowFocus","data","category_name","fetchCategories","CategoryService","deleteProduct","invalidateQueries","isLoading","handleSubmit","e","preventDefault","Promise","all","convertToBase64","base64Images","combinedImages","selectedCategory","find","option","mutate","to","onSubmit","htmlFor","extraClass","border","value","onChange","target","required","rows","toString","Number","selected","setSelected","width","options","item","size","quantity","prev"],"sourceRoot":""}