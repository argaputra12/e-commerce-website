{"version":3,"file":"static/js/190.0e9ec363.chunk.js","mappings":"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","sources":["components/Pagination.tsx","components/admin/Customers.tsx"],"sourcesContent":["import { CgArrowLongLeft, CgArrowLongRight } from 'react-icons/cg';\ninterface ProductParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\ninterface DefaultParams {\n  page: number;\n  pageSize: number;\n}\n\ninterface Props {\n  lastPage: number;\n  currentPage: number;\n  setParams:\n    | React.Dispatch<React.SetStateAction<ProductParams>>\n    | React.Dispatch<React.SetStateAction<DefaultParams>>;\n}\n\nconst Pagination: React.FC<Props> = ({ lastPage, currentPage, setParams }) => {\n  const scrolledToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  let pageNumbers: number[] = [];\n\n  for (let i = 1; i <= lastPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  let midPageNumbers = false;\n  let startPageNumbers = false;\n  let endPageNumbers = false;\n\n  if (currentPage <= 2) {\n    pageNumbers = [1, 2, 3];\n    startPageNumbers = true;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  } else if (currentPage >= lastPage - 1) {\n    pageNumbers = [lastPage - 2, lastPage - 1, lastPage];\n    endPageNumbers = true;\n    midPageNumbers = false;\n    startPageNumbers = false;\n  } else {\n    pageNumbers = [currentPage - 1, currentPage, currentPage + 1];\n    midPageNumbers = true;\n    startPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  if (lastPage <= 3) {\n    pageNumbers = [...Array(lastPage)].map((_, i) => i + 1);\n    startPageNumbers = false;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  return (\n    <div className=\"w-full\">\n      <ul className=\"mx-auto flex justify-center\">\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Previous Page\"\n            onClick={() => {\n              if (currentPage > 1) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page - 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            disabled={currentPage === 1}\n            className={`${\n              currentPage === 1\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16 items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongLeft />\n          </button>\n        </li>\n        {(midPageNumbers || endPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        {pageNumbers.map((num) => {\n          return (\n            <li key={num} className=\"\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setParams((prevParams: any) => ({\n                    ...prevParams,\n                    page: num,\n                  }));\n                  scrolledToTop();\n                }}\n                className={`${\n                  num === currentPage && 'bg-gray-500 text-gray-100'\n                } mx-1 flex h-10 w-10 cursor-pointer items-center justify-center border hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n              >\n                {num}\n              </button>\n            </li>\n          );\n        })}\n        {(midPageNumbers || startPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Next Page\"\n            onClick={() => {\n              if (currentPage < lastPage) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page + 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            className={`${\n              currentPage >= lastPage\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16  items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongRight />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useState } from 'react';\nimport { HiArrowDown } from 'react-icons/hi';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\n\nimport { DashboardService } from '../../api';\nimport Pagination from '../Pagination';\nimport { convertToCurrency } from '../util/utilFunc';\n\ninterface DefaultParams {\n  page: number;\n  pageSize: number;\n}\n\ninterface SortType {\n  column: string;\n  order: 'asc' | 'desc' | 'off';\n}\n\nconst Customers = () => {\n  const [params, setParams] = useState<DefaultParams>({\n    page: 1,\n    pageSize: 15,\n  });\n  const [sort, setSort] = useState<SortType>({\n    column: 'name',\n    order: 'desc',\n  });\n\n  const fetchCustomers = useQuery(['customers', params, sort], () =>\n    DashboardService.getCustomer(\n      sort.column,\n      sort.order,\n      params.page,\n      params.pageSize\n    )\n  );\n\n  const changeSort = (column: string) => {\n    if (sort.column === column) {\n      if (sort.order === 'asc') {\n        setSort({ column, order: 'desc' });\n      } else if (sort.order === 'desc') {\n        setSort({ column, order: 'off' });\n      } else {\n        setSort({ column, order: 'asc' });\n      }\n    } else {\n      setSort({ column, order: 'asc' });\n    }\n  };\n\n  return (\n    <div className=\"w-full whitespace-nowrap border border-gray-500 px-8 pt-4 pb-8\">\n      <div>\n        <div className=\"flex w-full place-content-evenly  gap-x-4  border-b-2 border-gray-200 pl-4\">\n          <div className=\"table-cell flex-[5] py-2 text-left font-semibold\">\n            <div\n              className=\"flex place-content-between place-items-center pr-2 cursor-pointer hover:text-gray-400 m-0\"\n              onClick={() => {\n                changeSort('name');\n              }}\n            >\n              <span>Name</span>\n              <HiArrowDown\n                className={`\n                  ${\n                    sort.column === 'name' && sort.order === 'asc'\n                      ? 'transform rotate-180'\n                      : sort.column !== 'name' || sort.order === 'off'\n                      ? 'hidden'\n                      : ''\n                  } text-gray-400 transition-all`}\n              />\n            </div>\n          </div>\n          <div className=\"table-cell flex-[4] py-2 text-left font-semibold\">\n            <div\n              className=\"flex place-content-between place-items-center pr-2 cursor-pointer hover:text-gray-400 m-0\"\n              onClick={() => {\n                changeSort('email');\n              }}\n            >\n              <span>Email</span>\n              <HiArrowDown\n                className={`\n                  ${\n                    sort.column === 'email' && sort.order === 'asc'\n                      ? 'transform rotate-180'\n                      : sort.column !== 'email' || sort.order === 'off'\n                      ? 'hidden'\n                      : ''\n                  } text-gray-400 transition-all`}\n              />\n            </div>\n          </div>\n          <div className=\"table-cell flex-[3] py-2 text-left font-semibold\">\n            <div\n              className=\"flex place-content-between place-items-center pr-2 cursor-pointer hover:text-gray-400 m-0\"\n              onClick={() => {\n                changeSort('total_order');\n              }}\n            >\n              <span>Total Order</span>\n              <HiArrowDown\n                className={`\n                  ${\n                    sort.column === 'total_order' && sort.order === 'asc'\n                      ? 'transform rotate-180'\n                      : sort.column !== 'total_order' || sort.order === 'off'\n                      ? 'hidden'\n                      : ''\n                  } text-gray-400 transition-all`}\n              />\n            </div>\n          </div>\n          <div className=\"table-cell flex-[3] py-2 text-left font-semibold\">\n            <div\n              className=\"flex place-content-between place-items-center pr-2 cursor-pointer hover:text-gray-400 m-0\"\n              onClick={() => {\n                changeSort('total_spent');\n              }}\n            >\n              <span>Total Spent</span>\n              <HiArrowDown\n                className={`\n                  ${\n                    sort.column === 'total_spent' && sort.order === 'asc'\n                      ? 'transform rotate-180'\n                      : sort.column !== 'total_spent' || sort.order === 'off'\n                      ? 'hidden'\n                      : ''\n                  } text-gray-400 transition-all`}\n              />\n            </div>\n          </div>\n          <div className=\"table-cell flex-[3] py-2 text-left font-semibold\">\n            <div\n              className=\"flex place-content-between place-items-center pr-2 cursor-pointer hover:text-gray-400 m-0\"\n              onClick={() => {\n                changeSort('last_order');\n              }}\n            >\n              <span>Last Order</span>\n              <HiArrowDown\n                className={`\n                  ${\n                    sort.column === 'last_order' && sort.order === 'asc'\n                      ? 'transform rotate-180'\n                      : sort.column !== 'last_order' || sort.order === 'off'\n                      ? 'hidden'\n                      : ''\n                  } text-gray-400 transition-all`}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mb-8\">\n        {fetchCustomers.data?.data.map((customer) => {\n          return (\n            <Link to={`${customer.id}`} key={customer.id}>\n              <div className=\" flex w-full cursor-pointer  place-content-evenly  gap-x-4 border-b-2 border-gray-200 pl-4 hover:bg-gray-50\">\n                <div className=\"table-cell flex-[5] overflow-hidden text-ellipsis py-2 text-left font-normal\">\n                  {customer.name}\n                </div>\n                <div className=\"table-cell flex-[4] overflow-hidden text-ellipsis py-2 text-left font-normal\">\n                  {customer.email}\n                </div>\n                <div className=\"table-cell flex-[3] overflow-hidden text-ellipsis py-2 text-left font-normal\">\n                  {customer.total_order}\n                </div>\n                <div className=\"table-cell flex-[3] overflow-hidden text-ellipsis py-2 text-left font-normal\">\n                  {convertToCurrency(customer.total_spent)}\n                </div>\n                <div className=\"table-cell flex-[3] overflow-hidden text-ellipsis py-2 text-left font-normal\">\n                  {customer.last_order}\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n      <Pagination\n        currentPage={params.page}\n        lastPage={fetchCustomers.data?.pagination.total_page || 0}\n        setParams={setParams}\n      />\n    </div>\n  );\n};\n\nexport default Customers;\n"],"names":["lastPage","currentPage","setParams","scrolledToTop","window","scrollTo","top","behavior","pageNumbers","i","push","midPageNumbers","startPageNumbers","endPageNumbers","Array","map","_","className","type","onClick","prevParams","page","disabled","num","useState","pageSize","params","column","order","sort","setSort","fetchCustomers","useQuery","DashboardService","changeSort","data","customer","to","id","name","email","total_order","convertToCurrency","total_spent","last_order","pagination","total_page"],"sourceRoot":""}