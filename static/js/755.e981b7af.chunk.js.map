{"version":3,"file":"static/js/755.e981b7af.chunk.js","mappings":"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","sources":["components/button/GhostButton.tsx","pages/Product.tsx"],"sourcesContent":["import { FC } from 'react';\n\ninterface Props {\n  extraClass?: string;\n  size?: 'sm' | 'normal' | 'lg';\n  inverted?: boolean;\n  noBorder?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n}\n\n// eslint-disable-next-line react/display-name\nconst GhostButton: FC<Props> = ({\n  onClick,\n  size,\n  extraClass,\n  noBorder = false,\n  inverted = true,\n  children,\n}) => {\n  let btnSize = '';\n  if (size === 'sm') {\n    btnSize = 'py-2 sm:py-1 px-5';\n  } else if (size === 'lg') {\n    btnSize = 'py-4 sm:py-3 px-7  text-xl';\n  } else {\n    btnSize = 'py-3 sm:py-2 px-6';\n  }\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={`cursor-pointer bg-white text-center text-xl tracking-widest text-gray-500 sm:text-base ${\n        !noBorder && 'border border-gray-500'\n      } ${\n        inverted\n          ? 'hover:bg-gray-500 hover:text-gray-100'\n          : 'hover:text-gray-400'\n      } ${btnSize} ${extraClass}`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default GhostButton;\n","import { useState } from 'react';\nimport { HiHeart, HiOutlineHeart } from 'react-icons/hi';\nimport { SiInstagram } from 'react-icons/si';\nimport { SlSocialFacebook } from 'react-icons/sl';\nimport { useQuery } from 'react-query';\nimport { Link, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { ApiError, ProductService } from '../api';\nimport Button from '../components/button/Button';\nimport GhostButton from '../components/button/GhostButton';\nimport { convertToCurrency } from '../components/util/utilFunc';\nimport { useAuth } from '../context/AuthContext';\nimport { useCart } from '../context/CartContext';\nimport { useWishlist } from '../context/WishlistContext';\n\nconst Product = () => {\n  const { id } = useParams();\n\n  const [size, setSize] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [mainImage, setMainImage] = useState('');\n  const { wishlist, addWishlistItem, deleteWishlistItem } = useWishlist();\n  const { role } = useAuth();\n  const { addCartItem } = useCart();\n\n  const fetchProduct = useQuery(\n    ['product', id],\n    () => ProductService.getProduct(id as string),\n    {\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        setMainImage(data.images[0]);\n        setSize((data.size as string[])[0]);\n      },\n    }\n  );\n\n  if (id === undefined) {\n    return <div>Error...</div>;\n  }\n  if (fetchProduct.isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (fetchProduct.isError) {\n    return <div>Error...</div>;\n  }\n\n  const alreadyWishlisted = wishlist.data.find(\n    (item) => item.product_id === id\n  );\n  const handleWishlist = () => {\n    if (role !== 'guest') {\n      alreadyWishlisted != null\n        ? deleteWishlistItem!.mutate({ product_id: id })\n        : addWishlistItem!.mutate({ id });\n    }\n  };\n  return (\n    <main id=\"main-content\" className=\"my-20 min-h-[60vh]\">\n      {/* ===== Breadcrumb Section ===== */}\n      <div className=\"bg-lightgreen flex h-16 w-full items-center border-t-2 border-gray-200 bg-gray-50\">\n        <div className=\"mx-auto w-[80rem]\">\n          <div className=\"breadcrumb w=full text-left\">\n            <Link to=\"/\" className=\"text-gray-400\">\n              Home\n            </Link>{' '}\n            /{' '}\n            <Link\n              to={`/products?category=${fetchProduct.data!.category_id}`}\n              className=\"capitalize text-gray-400\"\n            >\n              {fetchProduct.data!.category_name}\n            </Link>{' '}\n            / <span>{fetchProduct.data!.title}</span>\n          </div>\n        </div>\n      </div>\n      {/* ===== Main Content Section ===== */}\n      <div className=\"mx-auto flex max-w-7xl flex-col md:flex-row\">\n        <div className=\"imgSection flex h-full w-full md:w-1/2\">\n          <div className=\"my-4 hidden h-full w-full space-y-4 sm:block sm:w-1/4\">\n            {fetchProduct.data!.images.map((image: string, index: number) => (\n              <img\n                key={index}\n                src={image}\n                alt={fetchProduct.data!.title}\n                className={`cursor-pointer ${\n                  mainImage === image\n                    ? 'border border-gray-300 opacity-100'\n                    : 'opacity-50'\n                }`}\n                onClick={() => setMainImage(image)}\n              />\n            ))}\n          </div>\n          <div className=\"m-0 h-full w-full sm:m-4 sm:w-3/4\">\n            <Swiper\n              slidesPerView={1}\n              spaceBetween={0}\n              loop={true}\n              pagination={{\n                clickable: true,\n              }}\n              className=\"mySwiper sm:hidden\"\n            >\n              <SwiperSlide>\n                <img\n                  className=\"each-slide w-full\"\n                  src={fetchProduct.data!.images[0]}\n                  width={1000}\n                  height={1282}\n                  alt={fetchProduct.data!.title}\n                />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img\n                  className=\"each-slide w-full\"\n                  src={fetchProduct.data?.images[1]}\n                  width={1000}\n                  height={1282}\n                  alt={fetchProduct.data?.title}\n                />\n              </SwiperSlide>\n            </Swiper>\n            <div className=\"hidden h-full sm:block\">\n              <img\n                className=\"w-full\"\n                src={mainImage}\n                width={1000}\n                height={1282}\n                alt={fetchProduct.data!.title}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"infoSection flex h-auto w-full flex-col py-8 sm:pl-4 md:w-1/2\">\n          <h1 className=\"text-3xl\">{fetchProduct.data!.title}</h1>\n          <span className=\"mb-4 text-lg text-gray-400\">\n            {fetchProduct.data!.brand}\n          </span>\n          <span className=\"mb-2 text-xl text-gray-400\">\n            {convertToCurrency(fetchProduct.data!.price)}\n          </span>\n          <span className=\"mb-2 text-justify\">\n            {fetchProduct.data!.product_detail}\n          </span>\n          <span className=\"mb-2\">\n            Availability: {/* find quantity in current size */}\n            {fetchProduct.data!.stock?.find((item) => item.size === size)\n              ?.quantity || 0}\n          </span>\n          <span className=\"mb-2\">Size: {size}</span>\n          <div className=\"sizeContainer mb-4 flex space-x-4 text-sm\">\n            {fetchProduct\n              .data!.size?.map((singleSize) => ({\n                singleSize,\n                points:\n                  singleSize === 'M'\n                    ? 0\n                    : singleSize.length * (singleSize.includes('S') ? -1 : 1),\n              }))\n              .sort((a, b) => a.points - b.points)\n              .map(({ singleSize }) => (\n                <button\n                  key={singleSize}\n                  className={`${\n                    size === singleSize\n                      ? 'border-gray-500'\n                      : 'border-gray-300 text-gray-400'\n                  } flex h-8 w-8 items-center justify-center border hover:bg-gray-500 hover:text-gray-100`}\n                  onClick={() => setSize(singleSize)}\n                >\n                  {singleSize}\n                </button>\n              ))}\n          </div>\n          <div className=\"addToCart mb-4 flex flex-col space-y-4 sm:flex-row sm:space-y-0 md:flex-col lg:flex-row\">\n            <div className=\"plusOrMinus mb-4 mr-0 flex h-12 justify-center divide-x-2 divide-gray-300 border border-gray-300 sm:mr-4 md:mr-0 lg:mr-4\">\n              <div\n                onClick={() => setQuantity((prevState) => prevState - 1)}\n                className={`${\n                  quantity === 1 && 'pointer-events-none'\n                } flex h-full w-full cursor-pointer items-center justify-center hover:bg-gray-500 hover:text-gray-100 sm:w-12`}\n              >\n                -\n              </div>\n              <div className=\"pointer-events-none flex h-full w-28 items-center justify-center sm:w-12\">\n                {quantity}\n              </div>\n              <div\n                onClick={() => setQuantity((prevState) => prevState + 1)}\n                className=\"flex h-full w-full cursor-pointer items-center justify-center hover:bg-gray-500 hover:text-gray-100 sm:w-12\"\n              >\n                +\n              </div>\n            </div>\n            <div className=\"flex h-12 w-full space-x-4\">\n              <Button\n                value=\"Add to Cart\"\n                size=\"lg\"\n                extraClass={'flex-grow text-center whitespace-nowrap'}\n                onClick={() => {\n                  if (quantity > 0) {\n                    addCartItem?.mutate(\n                      {\n                        product_id: fetchProduct.data!.id,\n                        quantity,\n                        size,\n                      },\n                      {\n                        onError: (error) => {\n                          toast.error((error as ApiError).body.message);\n                        },\n                      }\n                    );\n                  }\n                }}\n              />\n              <GhostButton onClick={handleWishlist} extraClass=\"text-4xl\">\n                {alreadyWishlisted != null ? (\n                  <HiHeart className=\"h-7 w-7 text-4xl text-gray-500\" />\n                ) : (\n                  <HiOutlineHeart className=\"h-7 w-7 text-4xl text-gray-500\" />\n                )}\n              </GhostButton>\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center space-x-4\">\n            <span>Share</span>\n            <SlSocialFacebook className=\"h-4 cursor-pointer text-gray-400 hover:text-gray-500\" />\n            <SiInstagram className=\"h-4 cursor-pointer text-gray-400 hover:text-gray-500\" />\n          </div>\n        </div>\n      </div>\n      {/* ===== Horizontal Divider ===== */}\n      {/* <div className=\"border-b-2 border-gray-200\"></div> */}\n\n      {/* ===== You May Also Like Section ===== */}\n      {/* <div className=\"recSection my-8 app-max-width app-x-padding\">\n        <h2 className=\"text-3xl mb-6\">{t('you_may_also_like')}</h2>\n        <Swiper\n          slidesPerView={2}\n          // centeredSlides={true}\n          spaceBetween={10}\n          loop={true}\n          grabCursor={true}\n          pagination={{\n            clickable: true,\n            type: 'bullets',\n          }}\n          className=\"mySwiper card-swiper sm:hidden\"\n        >\n          {products.map((item) => (\n            <SwiperSlide key={item.id}>\n              <div className=\"mb-6\">\n                <Card key={item.id} item={item} />\n              </div>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n        <div className=\"hidden sm:grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-x-4 gap-y-10 sm:gap-y-6 mb-10\">\n          {products.map((item) => (\n            <Card key={item.id} item={item} />\n          ))}\n        </div>\n      </div> */}\n    </main>\n  );\n};\nexport default Product;\n"],"names":["onClick","size","extraClass","noBorder","inverted","children","btnSize","type","className","id","useParams","useState","setSize","quantity","setQuantity","mainImage","setMainImage","useWishlist","wishlist","addWishlistItem","deleteWishlistItem","role","useAuth","addCartItem","useCart","fetchProduct","useQuery","ProductService","refetchOnWindowFocus","onSuccess","data","images","undefined","isLoading","isError","alreadyWishlisted","find","item","product_id","to","category_id","category_name","title","map","image","index","src","alt","slidesPerView","spaceBetween","loop","pagination","clickable","width","height","brand","convertToCurrency","price","product_detail","stock","singleSize","points","length","includes","sort","a","b","prevState","value","mutate","onError","error","toast","body","message"],"sourceRoot":""}