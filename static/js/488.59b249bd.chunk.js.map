{"version":3,"file":"static/js/488.59b249bd.chunk.js","mappings":"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","sources":["components/Card.tsx","components/Pagination.tsx","components/Dropdown.tsx","components/Sort.tsx","pages/Products.tsx"],"sourcesContent":["import { FC, useState } from 'react';\nimport { HiHeart, HiOutlineHeart } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nimport { BestSeller, Product } from '../api';\nimport { convertToCurrency } from '../components/util/utilFunc';\nimport { useAuth } from '../context/AuthContext';\nimport { useWishlist } from '../context/WishlistContext';\n\ninterface Props {\n  item: BestSeller | Product;\n}\n\nconst Card: FC<Props> = ({ item }) => {\n  const { wishlist, addWishlistItem, deleteWishlistItem } = useWishlist();\n  const { role } = useAuth();\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [isWLHovered, setIsWLHovered] = useState(false);\n\n  const { id, title, price, images } = item;\n\n  const itemLink = `/products/${encodeURIComponent(id)}`;\n\n  const alreadyWishlisted = wishlist.data.find(\n    (item) => item.product_id === id\n  );\n  const handleWishlist = () => {\n    if (role !== 'guest') {\n      alreadyWishlisted != null\n        ? deleteWishlistItem!.mutate({ product_id: id })\n        : addWishlistItem!.mutate({ id });\n    }\n  };\n\n  return (\n    <div className=\"w-60\">\n      <div\n        className=\"group relative mb-1 overflow-hidden\"\n        onMouseOver={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <Link to={itemLink} tabIndex={-1}>\n          <img\n            src={images[0]}\n            alt={title}\n            loading=\"lazy\"\n            className={`${\n              isHovered ? 'hidden' : 'animate__fadeIn'\n            } animate__animated h-80  object-cover`}\n          />\n          <img\n            className={`${\n              !isHovered ? 'hidden' : ''\n            } h-80 transform object-cover transition-transform duration-1000 hover:scale-110`}\n            src={images[1] || images[0]}\n            alt={title}\n          />\n        </Link>\n        <button\n          type=\"button\"\n          className=\"absolute top-2 right-2 rounded-full p-1 text-2xl\"\n          aria-label=\"Wishlist \"\n          onClick={handleWishlist}\n          onMouseOver={() => setIsWLHovered(true)}\n          onMouseLeave={() => setIsWLHovered(false)}\n        >\n          {isWLHovered || alreadyWishlisted != null ? (\n            <HiHeart className=\"text-red-500\" />\n          ) : (\n            <HiOutlineHeart className=\"text-gray-500\" />\n          )}\n        </button>\n        <Link\n          to={itemLink}\n          className=\"absolute left-0 right-1/2 z-10 mx-auto translate-x-1/2 transform whitespace-nowrap bg-white px-4 py-2 font-lato font-semibold text-gray-700 transition-all  duration-500 hover:bg-gray-500 hover:text-gray-100 focus:bottom-8 focus:duration-75 group-hover:bottom-8 sm:block md:-bottom-10\"\n        >\n          See Details\n        </Link>\n      </div>\n\n      <div className=\"content font-lato\">\n        <Link\n          to={itemLink}\n          className=\"mb-1 block truncate text-base text-gray-700 no-underline sm:text-lg \"\n        >\n          {title}\n        </Link>\n        <div className=\"text-gray-400\">{convertToCurrency(price)}</div>\n        <Link to={itemLink} className=\"text-sm font-bold uppercase sm:hidden\">\n          See Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { CgArrowLongLeft, CgArrowLongRight } from 'react-icons/cg';\ninterface ProductParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\ninterface DefaultParams {\n  page: number;\n  pageSize: number;\n}\n\ninterface Props {\n  lastPage: number;\n  currentPage: number;\n  setParams:\n    | React.Dispatch<React.SetStateAction<ProductParams>>\n    | React.Dispatch<React.SetStateAction<DefaultParams>>;\n}\n\nconst Pagination: React.FC<Props> = ({ lastPage, currentPage, setParams }) => {\n  const scrolledToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  let pageNumbers: number[] = [];\n\n  for (let i = 1; i <= lastPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  let midPageNumbers = false;\n  let startPageNumbers = false;\n  let endPageNumbers = false;\n\n  if (currentPage <= 2) {\n    pageNumbers = [1, 2, 3];\n    startPageNumbers = true;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  } else if (currentPage >= lastPage - 1) {\n    pageNumbers = [lastPage - 2, lastPage - 1, lastPage];\n    endPageNumbers = true;\n    midPageNumbers = false;\n    startPageNumbers = false;\n  } else {\n    pageNumbers = [currentPage - 1, currentPage, currentPage + 1];\n    midPageNumbers = true;\n    startPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  if (lastPage <= 3) {\n    pageNumbers = [...Array(lastPage)].map((_, i) => i + 1);\n    startPageNumbers = false;\n    midPageNumbers = false;\n    endPageNumbers = false;\n  }\n\n  return (\n    <div className=\"w-full\">\n      <ul className=\"mx-auto flex justify-center\">\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Previous Page\"\n            onClick={() => {\n              if (currentPage > 1) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page - 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            disabled={currentPage === 1}\n            className={`${\n              currentPage === 1\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16 items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongLeft />\n          </button>\n        </li>\n        {(midPageNumbers || endPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        {pageNumbers.map((num) => {\n          return (\n            <li key={num} className=\"\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setParams((prevParams: any) => ({\n                    ...prevParams,\n                    page: num,\n                  }));\n                  scrolledToTop();\n                }}\n                className={`${\n                  num === currentPage && 'bg-gray-500 text-gray-100'\n                } mx-1 flex h-10 w-10 cursor-pointer items-center justify-center border hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n              >\n                {num}\n              </button>\n            </li>\n          );\n        })}\n        {(midPageNumbers || startPageNumbers) && (\n          <li>\n            <span className=\"flex items-end text-3xl\">...</span>\n          </li>\n        )}\n        <li>\n          <button\n            type=\"button\"\n            aria-label=\"Navigate to Next Page\"\n            onClick={() => {\n              if (currentPage < lastPage) {\n                setParams((prevParams: any) => ({\n                  ...prevParams,\n                  page: prevParams.page + 1,\n                }));\n                scrolledToTop();\n              }\n            }}\n            className={`${\n              currentPage >= lastPage\n                ? 'pointer-events-none cursor-not-allowed text-gray-400'\n                : 'cursor-pointer'\n            } mx-1 flex h-10 w-16  items-center justify-center border px-3 text-2xl hover:bg-gray-500 hover:text-gray-100 focus:outline-none`}\n          >\n            <CgArrowLongRight />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { Fragment } from 'react';\nimport { HiOutlineChevronDown } from 'react-icons/hi';\n\nimport { Menu, Transition } from '@headlessui/react';\n\ninterface TypeParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\ninterface props {\n  params: TypeParams;\n  setParams: React.Dispatch<React.SetStateAction<TypeParams>>;\n}\n\nconst Dropdown = ({ params, setParams }: props) => {\n  const sorts = [\n    { name: 'Name: A to Z', value: 'Title a_z' },\n    { name: 'Name: Z to A', value: 'Title z_a' },\n    { name: 'Price: Low to High', value: 'Price a_z' },\n    { name: 'Price: High to Low', value: 'Price z_a' },\n    { name: 'Newest', value: 'Newest' },\n    { name: 'Oldest', value: 'Oldest' },\n  ];\n\n  const selectedSort = sorts.find((sort) => sort.value === params.sortBy);\n\n  return (\n    <Menu as=\"div\" className=\"relative inline-block w-full text-left\">\n      <div>\n        <Menu.Button className=\"inline-flex h-10 w-full justify-between rounded border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700  hover:bg-gray-50  \">\n          {selectedSort?.name}\n          <HiOutlineChevronDown\n            className=\"-mr-1 ml-2 h-5 w-5\"\n            aria-hidden=\"true\"\n          />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"absolute right-0 z-10 w-[13.5rem] origin-top divide-y rounded bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          {sorts.map((sort) => (\n            <Menu.Item key={sort.value}>\n              {({ active }) => (\n                <button\n                  className={`${\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                  onClick={() => {\n                    setParams((prev) => ({\n                      ...prev,\n                      sortBy: sort.value,\n                    }));\n                  }}\n                >\n                  {sort.name}\n                </button>\n              )}\n            </Menu.Item>\n          ))}\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useRef } from 'react';\nimport { CiDollar } from 'react-icons/ci';\nimport { useQuery } from 'react-query';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { capitalCase } from 'change-case';\n\nimport { CategoryService, Pagination } from '../api';\nimport Dropdown from '../components/Dropdown';\nconst pluralize = require('pluralize');\n\ninterface TypeParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\ninterface SortProps {\n  params: TypeParams;\n  setParams: React.Dispatch<React.SetStateAction<TypeParams>>;\n  pagination?: Pagination;\n}\n\nconst Sort: React.FC<SortProps> = ({ params, setParams, pagination }) => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const popping = useRef(false);\n  useEffect(() => {\n    window.onpopstate = () => {\n      if (!window.location.pathname.includes('product')) return;\n      setParams({\n        category: searchParams.getAll('category'),\n        page: Number(searchParams.get('page')) || 1,\n        pageSize: Number(searchParams.get('page_size')) || 12,\n        sortBy: searchParams.get('sort_by') || 'Title a_z',\n        price: searchParams.getAll('price').map((price) => Number(price)),\n        condition: searchParams.get('condition') || '',\n        productName: searchParams.get('product_name') || '',\n      });\n    };\n    popping.current = true;\n  }, [setParams, searchParams]);\n\n  const fetchCategories = useQuery(\n    'categories',\n    () => CategoryService.getCategory(),\n    {\n      staleTime: Infinity,\n    }\n  );\n\n  const conditions = ['new', 'used'];\n\n  useEffect(() => {\n    const requestParams = new URLSearchParams();\n    requestParams.append('page', params.page.toString());\n    requestParams.append('page_size', params.pageSize.toString());\n    requestParams.append('sort_by', params.sortBy);\n\n    if (searchParams.get('searchImage') !== null) {\n      params.category = searchParams.getAll('category');\n    }\n    params.category.forEach((single_category) => {\n      requestParams.append('category', single_category);\n    });\n    params.price.forEach((single_price) => {\n      if (single_price) {\n        requestParams.append('price', single_price.toString());\n      }\n    });\n    if (params.condition.length > 0) {\n      requestParams.append('condition', params.condition);\n    }\n    if (params.productName.length > 0) {\n      requestParams.append('product_name', params.productName);\n    }\n    if (\n      searchParams.toString() === '' ||\n      searchParams.toString() === requestParams.toString() ||\n      popping.current\n    ) {\n      navigate(`?${requestParams.toString()}`, { replace: true });\n      popping.current = false;\n    } else {\n      navigate(`?${requestParams.toString()}`, {\n        state: { params },\n      });\n    }\n  }, [params, navigate, searchParams]);\n\n  if (fetchCategories.isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (fetchCategories.isError || fetchCategories.data == null) {\n    return <div>Error...</div>;\n  }\n\n  const categories = fetchCategories.data.data;\n  const categoriesByType = categories.reduce<Record<string, any[]>>(\n    (acc, category) => {\n      const { type } = category;\n      if (!acc[type]) {\n        acc[type] = [];\n      }\n      acc[type].push(category);\n      return acc;\n    },\n    {}\n  );\n\n  return (\n    <div className=\"flex w-full  flex-col text-gray-600\">\n      <div className=\"border-b border-b-gray-100 px-4 py-5 \">\n        {pagination != null && pagination.total_item > 0 ? (\n          <span>\n            Showing {1 + (pagination.page - 1) * pagination.page_size} -{' '}\n            {Math.min(\n              pagination.page * pagination.page_size,\n              pagination.total_item\n            )}{' '}\n            of {pagination.total_item} Results\n          </span>\n        ) : (\n          <span>No results</span>\n        )}\n      </div>\n      <div className=\"flex flex-col gap-y-4 border-b border-b-gray-100 px-4 pt-3 pb-4 \">\n        {Object.entries(categoriesByType).map(([type, categories]) => (\n          <div key={type}>\n            <h2 className=\"mb-2 text-xl text-black\">\n              {pluralize(capitalCase(type, { delimiter: ' & ' }))}\n            </h2>\n            <ul className=\"flex flex-col gap-y-2\">\n              {categories.map((category) => (\n                <li key={category.id} className=\"flex items-center \">\n                  <input\n                    type=\"checkbox\"\n                    checked={params.category.includes(category.id)}\n                    id={category.id}\n                    name={pluralize.singular(capitalCase(category.title))}\n                    value={category.id}\n                    onChange={(e) => {\n                      const { checked, value } = e.target;\n                      if (checked) {\n                        setParams((prev) => ({\n                          ...prev,\n                          page: 1,\n                          category: [...prev.category, value],\n                        }));\n                      } else {\n                        setParams((prev) => ({\n                          ...prev,\n                          page: 1,\n                          category: prev.category.filter(\n                            (item) => item !== value\n                          ),\n                        }));\n                      }\n                    }}\n                    className=\"mx-2 h-4 w-4 border-gray-300  text-gray-600 accent-gray-600\"\n                  />\n                  {pluralize.singular(capitalCase(category.title))}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n      <div className=\"sort border-b border-b-gray-100 px-4 pt-3 pb-6\">\n        <h2 className=\"mb-2 text-xl text-black\">Sort By</h2>\n        <Dropdown params={params} setParams={setParams} />\n      </div>\n      <div className=\"price flex flex-col gap-y-4 border-b border-b-gray-100 px-4 pt-3 pb-6\">\n        <fieldset className=\"price-wrapper\">\n          <legend className=\"mb-3 text-xl text-black\">Minimum Price</legend>\n          <div className=\"input-price flex items-center gap-x-2 rounded border border-gray-300 px-3 py-1\">\n            <CiDollar className=\"text-3xl text-gray-400\" />\n            <input\n              type=\"number\"\n              name=\"min-price\"\n              id=\"min-price\"\n              className=\"h-5 w-full\"\n              placeholder=\"0\"\n              defaultValue={params.price[0]}\n              onBlur={(e) => {\n                const value = e.target.value;\n                if (value || params.price[0] !== parseInt(value)) {\n                  setParams((prev) => ({\n                    ...prev,\n                    page: 1,\n                    price: [Number(value), prev.price[1]],\n                  }));\n                }\n              }}\n            />\n          </div>\n        </fieldset>\n        <fieldset className=\"price-wrapper\">\n          <legend className=\"mb-3 text-xl text-black\">Maximum Price</legend>\n          <div className=\"input-price flex items-center gap-x-2 rounded border border-gray-300 px-3 py-1\">\n            <CiDollar className=\"text-3xl text-gray-400\" />\n            <input\n              type=\"number\"\n              name=\"max-price\"\n              id=\"max-price\"\n              defaultValue={params.price[1]}\n              className=\"h-5 w-full\"\n              onBlur={(e) => {\n                const value = e.target.value;\n                if (!value) {\n                  setParams((prev) => ({\n                    ...prev,\n                    page: 1,\n                    price: [prev.price[0]],\n                  }));\n                } else {\n                  setParams((prev) => ({\n                    ...prev,\n                    page: 1,\n                    price: [prev.price[0] || 0, Number(value)],\n                  }));\n                }\n              }}\n              placeholder=\"999999\"\n            />\n          </div>\n        </fieldset>\n      </div>\n      <div className=\"flex flex-col gap-y-3 px-4 py-3 \">\n        <h2 className=\"text-xl text-black\">Condition</h2>\n        <ul className=\"flex flex-col gap-y-2\">\n          {conditions.map((condition, index) => (\n            <li key={index} className=\"flex items-center \">\n              <input\n                type=\"radio\"\n                checked={params.condition === condition}\n                name=\"condition\"\n                value={condition}\n                onChange={(e) => {\n                  const { checked, value } = e.target;\n                  if (checked) {\n                    setParams((prev) => ({\n                      ...prev,\n                      page: 1,\n                      condition: value,\n                    }));\n                  }\n                }}\n                className=\"mx-2 h-4 w-4 border-gray-300  text-gray-600 accent-gray-600\"\n              />\n              {capitalCase(condition)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Sort;\n","import { useRef, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { useQuery } from 'react-query';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ProductService } from '../api';\nimport Card from '../components/Card';\nimport Pagination from '../components/Pagination';\nimport Sort from '../components/Sort';\nimport { useSearch } from '../context/SearchContext';\n\ninterface ProductParams {\n  category: string[];\n  page: number;\n  pageSize: number;\n  sortBy: string;\n  price: number[];\n  condition: string;\n  productName: string;\n}\n\nconst Products = () => {\n  const [searchParams] = useSearchParams();\n  const { searchImage, setSearchImage } = useSearch();\n  const scrolledToTop = useRef(false);\n  const [params, setParams] = useState<ProductParams>({\n    category: searchParams.getAll('category'),\n    page: Number(searchParams.get('page')) || 1,\n    pageSize: Number(searchParams.get('page_size')) || 12,\n    sortBy: searchParams.get('sort_by') || 'Title a_z',\n    price: searchParams.getAll('price').map((price) => Number(price)),\n    condition: searchParams.get('condition') || '',\n    productName: searchParams.get('product_name') || '',\n  });\n\n  const fetchProducts = useQuery(\n    ['products', params],\n    () =>\n      ProductService.getProducts(\n        params.category,\n        params.page,\n        params.pageSize,\n        params.sortBy,\n        params.price,\n        params.condition,\n        params.productName\n      ),\n    {\n      staleTime: Infinity,\n      retryOnMount: false,\n      retry: 0,\n    }\n  );\n\n  if (fetchProducts.isLoading) {\n    // scroll to top only only once\n    if (!scrolledToTop.current) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n      scrolledToTop.current = true;\n    }\n  } else {\n    scrolledToTop.current = false;\n  }\n\n  return (\n    <main id=\"main-content\" className=\"mx-auto mt-20 min-h-[60vh] max-w-7xl\">\n      {/* ===== Heading & Continue Shopping */}\n      <div className=\"w-full border-t-2 border-gray-100 \">\n        <h1 className=\"mt-6 mb-2 text-center text-2xl sm:text-left sm:text-4xl\">\n          Product\n        </h1>\n      </div>\n\n      {/* ===== Product Section ===== */}\n      <div className=\"mb-16 flex min-h-screen  gap-x-4\">\n        <section className=\"h-fit w-72 border border-gray-400 p-4 \">\n          <Sort\n            params={params}\n            setParams={setParams}\n            pagination={fetchProducts.data?.pagination}\n          />\n        </section>\n        <div className=\"flex flex-1 flex-col gap-y-4\">\n          {searchImage[0] && searchImage[0].category.length > 0 && (\n            <section className=\"w-full  border border-gray-400 p-4\">\n              <div className=\"group relative flex w-full place-content-start gap-x-4 overflow-hidden \">\n                <img\n                  alt=\"you searched for\"\n                  src={(searchImage[0].file as any).preview}\n                  className=\"w-40 rounded-md border-2  border-gray-100  object-contain object-bottom\"\n                  onLoad={() => {\n                    URL.revokeObjectURL((searchImage[0].file as any).preview);\n                  }}\n                />\n                <div className=\"text-left text-xl text-gray-700\">\n                  <b>We found these following products:</b>\n                  <p>\n                    We're pretty sure you were looking for{' '}\n                    <b>{searchImage[0].category}</b>\n                    <br />\n                    If this not what you were looking for, then we are fricked\n                  </p>\n                </div>\n                <IoClose\n                  onClick={() => {\n                    setSearchImage!(\n                      new Array({\n                        file: new File([], ''),\n                        category: '',\n                      })\n                    );\n                  }}\n                  className=\"absolute top-0 right-0 animate-spin-fast-once cursor-pointer text-3xl text-gray-400\"\n                />\n              </div>\n            </section>\n          )}\n\n          {fetchProducts.isLoading ? (\n            <div className=\"not-found flex h-full w-full flex-col items-center gap-y-4 py-[10%] text-2xl\">\n              <strong>Loading...</strong>\n              <div>Please wait a moment</div>\n            </div>\n          ) : fetchProducts.data != null &&\n            fetchProducts.data?.data.length > 0 ? (\n            <div className=\"flex flex-col justify-between gap-y-12\">\n              <section className=\"grid w-full grid-cols-2 gap-y-4 gap-x-2 lg:grid-cols-3 xl:grid-cols-4\">\n                {fetchProducts.data?.data.map((product) => (\n                  <Card key={product.id} item={product} />\n                ))}\n              </section>\n              <Pagination\n                currentPage={params.page}\n                lastPage={fetchProducts.data?.pagination.total_page}\n                setParams={setParams}\n              />\n            </div>\n          ) : (\n            <div className=\"not-found flex h-full w-full flex-col  items-center gap-y-4 py-[10%] text-2xl\">\n              <strong>Oops! No product found</strong>\n              <div>Please try again with different keywords or filters</div>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Products;\n"],"names":["item","useWishlist","wishlist","addWishlistItem","deleteWishlistItem","role","useAuth","useState","isHovered","setIsHovered","isWLHovered","setIsWLHovered","id","title","price","images","itemLink","encodeURIComponent","alreadyWishlisted","data","find","product_id","className","onMouseOver","onMouseLeave","to","tabIndex","src","alt","loading","type","onClick","mutate","convertToCurrency","lastPage","currentPage","setParams","scrolledToTop","window","scrollTo","top","behavior","pageNumbers","i","push","midPageNumbers","startPageNumbers","endPageNumbers","Array","map","_","prevParams","page","disabled","num","params","sorts","name","value","selectedSort","sort","sortBy","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","active","prev","pluralize","require","pagination","navigate","useNavigate","useSearchParams","searchParams","popping","useRef","useEffect","onpopstate","location","pathname","includes","category","getAll","Number","get","pageSize","condition","productName","current","fetchCategories","useQuery","CategoryService","staleTime","Infinity","requestParams","URLSearchParams","append","toString","forEach","single_category","single_price","length","replace","state","isLoading","isError","categoriesByType","reduce","acc","total_item","page_size","Math","min","Object","entries","categories","capitalCase","delimiter","checked","singular","onChange","e","target","filter","placeholder","defaultValue","onBlur","parseInt","index","useSearch","searchImage","setSearchImage","fetchProducts","ProductService","retryOnMount","retry","file","preview","onLoad","URL","revokeObjectURL","File","product","Card","Pagination","total_page"],"sourceRoot":""}